####################################  项目端口  ####################################
server.port = 8888

####################################  其他  ####################################
#日志文件路径
logging.path=D:/logs/bootdo-demo
#项目域名
common.hostUrl = https://xxx.com/
#文件上传路径
common.profile = D:/bootdo-demo/uploadPath

####################################  Druid数据库  ####################################
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/bootdo-demo?allowMultiQueries=true&useUnicode=true&useSSL=false&characterEncoding=UTF-8&allowPublicKeyRetrieval=true&serverTimezone=UTC
spring.datasource.username = root
spring.datasource.password = 123456
#连接池的配置信息
spring.datasource.maxActive = 20
spring.datasource.initialSize = 1
spring.datasource.minIdle = 1
# 配置获取连接等待超时的时间
spring.datasource.maxWait = 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis = 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis = 300000
spring.datasource.validationQuery = SELECT 1 FROM DUAL
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
spring.datasource.maxOpenPreparedStatements = 20
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements = true
spring.datasource.maxPoolPreparedStatementPerConnectionSize = 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters = stat,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties = druid.stat.mergeSql=true;druid.stat.slowSqlMillis=1000
#spring.datasource.useGlobalDataSourceStat=true

####################################  redis  ####################################
spring.redis.projectName = bootdo-demo
spring.redis.database = 0
spring.redis.host = 127.0.0.1
spring.redis.port = 6379
spring.redis.password =
#最大连接数
spring.redis.jedis.pool.max-active = 100
#最大阻塞等待时间(负数表示没限制)
spring.redis.jedis.pool.max-wait = -1
#最大空闲
spring.redis.jedis.pool.max-idle = 100
#最小空闲
spring.redis.jedis.pool.min-idle = 0
spring.redis.timeout = 10000
spring.cache.type = redis
